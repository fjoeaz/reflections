How did viewing a diff between two versions of a file help you see the bug that was introduced?
	Yes, it focused our attention on the issue at hand.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	One might remove a feature that but later need it again and you would not have to come up with the solution again.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
	Pros are that your saves are logically useful.
	Cons are that you might not save work that may be useful later.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
	It is a good thing because it is a super set of the other there by allowing you to do both if so inclined while also giving you the added feature of tracking a change set instead of just a file.

How can you use the commands git log and git diff to view the history of files?
	Log will show you an overview of commit history whereas diff will show you the changes between commits.

How might using version control make you more confident to make changes that could break something?
	If you break it, you always have a way to revert back to a working version. In addition, you can go back to your non-working version if you understand where you went wrong and continue where you left off or just abandon that path and start anew.

Now that you have your workspace set up, what do you want to try using Git for?
	Committing this file!

